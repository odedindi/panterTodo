### This file was generated by Nexus Schema
### Do not make changes to this file directly


scalar DateTime

input NestedStringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringFilter
  notIn: [String!]
  startsWith: String
}

type Query {
  me: User
  todo(where: TodoWhereUniqueInput!): Todo
  todoLists: [TodoList]
  todos(after: TodoWhereUniqueInput, before: TodoWhereUniqueInput, first: Int, last: Int, orderBy: [QueryTodosOrderByInput!], where: QueryTodosWhereInput): [Todo!]!
}

enum QueryMode {
  default
  insensitive
}

input QueryTodosOrderByInput {
  title: SortOrder
}

input QueryTodosWhereInput {
  todoListId: StringFilter
}

enum SortOrder {
  asc
  desc
}

input StringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  mode: QueryMode
  not: NestedStringFilter
  notIn: [String!]
  startsWith: String
}

type Todo {
  completed: Boolean!
  createdAt: DateTime!
  id: String!
  title: String!
  todoListId: String!
}

type TodoList {
  id: String!
  title: String!
  userId: String!
}

input TodoWhereUniqueInput {
  id: String
}

type User {
  email: String
  id: String!
  image: String
  name: String
}
