### This file was generated by Nexus Schema
### Do not make changes to this file directly


input AccountListRelationFilter {
  every: AccountWhereInput
  none: AccountWhereInput
  some: AccountWhereInput
}

input AccountOrderByRelationAggregateInput {
  _count: SortOrder
}

input AccountWhereInput {
  AND: [AccountWhereInput!]
  NOT: [AccountWhereInput!]
  OR: [AccountWhereInput!]
  access_token: StringNullableFilter
  expires_at: IntNullableFilter
  id: StringFilter
  id_token: StringNullableFilter
  oauth_token: StringNullableFilter
  oauth_token_secret: StringNullableFilter
  provider: StringFilter
  providerAccountId: StringFilter
  refresh_token: StringNullableFilter
  scope: StringNullableFilter
  session_state: StringNullableFilter
  token_type: StringNullableFilter
  type: StringFilter
  user: UserWhereInput
  userId: StringFilter
}

scalar DateTime

input DateTimeFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeFilter
  notIn: [DateTime!]
}

input DateTimeNullableFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeNullableFilter
  notIn: [DateTime!]
}

input IntNullableFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntNullableFilter
  notIn: [Int!]
}

type Mutation {
  createTodo(title: String!, todoListId: String!): Todo!
  toggleTodo(completed: Boolean!, id: ID!): Todo!
}

input NestedDateTimeFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeFilter
  notIn: [DateTime!]
}

input NestedDateTimeNullableFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeNullableFilter
  notIn: [DateTime!]
}

input NestedIntNullableFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntNullableFilter
  notIn: [Int!]
}

input NestedStringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringFilter
  notIn: [String!]
  startsWith: String
}

input NestedStringNullableFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringNullableFilter
  notIn: [String!]
  startsWith: String
}

type Query {
  me: User
  todo(where: TodoWhereUniqueInput!): Todo
  todoList(where: TodoListWhereUniqueInput!): TodoList
  todoLists(after: TodoListWhereUniqueInput, before: TodoListWhereUniqueInput, first: Int, last: Int, orderBy: [TodoListOrderByWithRelationInput!], where: TodoListWhereInput): [TodoList!]!
  todos(after: TodoWhereUniqueInput, before: TodoWhereUniqueInput, first: Int, last: Int, orderBy: [QueryTodosOrderByInput!], where: QueryTodosWhereInput): [Todo!]!
  todosByList: [Todo]
}

enum QueryMode {
  default
  insensitive
}

input QueryTodosOrderByInput {
  title: SortOrder
}

input QueryTodosWhereInput {
  todoListId: StringFilter
}

input SessionListRelationFilter {
  every: SessionWhereInput
  none: SessionWhereInput
  some: SessionWhereInput
}

input SessionOrderByRelationAggregateInput {
  _count: SortOrder
}

input SessionWhereInput {
  AND: [SessionWhereInput!]
  NOT: [SessionWhereInput!]
  OR: [SessionWhereInput!]
  expires: DateTimeFilter
  id: StringFilter
  sessionToken: StringFilter
  user: UserWhereInput
  userId: StringFilter
}

enum SortOrder {
  asc
  desc
}

input StringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  mode: QueryMode
  not: NestedStringFilter
  notIn: [String!]
  startsWith: String
}

input StringNullableFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  mode: QueryMode
  not: NestedStringNullableFilter
  notIn: [String!]
  startsWith: String
}

type Todo {
  completed: Boolean!
  createdAt: DateTime!
  id: String!
  title: String!
  todoListId: String!
}

type TodoList {
  id: String!
  title: String!
}

input TodoListListRelationFilter {
  every: TodoListWhereInput
  none: TodoListWhereInput
  some: TodoListWhereInput
}

input TodoListOrderByRelationAggregateInput {
  _count: SortOrder
}

input TodoListOrderByWithRelationInput {
  id: SortOrder
  title: SortOrder
  todos: TodoOrderByRelationAggregateInput
  user: UserOrderByWithRelationInput
  userId: SortOrder
}

input TodoListRelationFilter {
  is: TodoListWhereInput
  isNot: TodoListWhereInput
}

input TodoListWhereInput {
  AND: [TodoListWhereInput!]
  NOT: [TodoListWhereInput!]
  OR: [TodoListWhereInput!]
  id: StringFilter
  title: StringFilter
  todos: TodoListRelationFilter
  user: UserWhereInput
  userId: StringFilter
}

input TodoListWhereUniqueInput {
  id: String
}

input TodoOrderByRelationAggregateInput {
  _count: SortOrder
}

input TodoWhereUniqueInput {
  id: String
}

type User {
  email: String
  id: String!
  image: String
  name: String
}

input UserOrderByWithRelationInput {
  accounts: AccountOrderByRelationAggregateInput
  email: SortOrder
  emailVerified: SortOrder
  id: SortOrder
  image: SortOrder
  name: SortOrder
  sessions: SessionOrderByRelationAggregateInput
  todoLists: TodoListOrderByRelationAggregateInput
}

input UserWhereInput {
  AND: [UserWhereInput!]
  NOT: [UserWhereInput!]
  OR: [UserWhereInput!]
  accounts: AccountListRelationFilter
  email: StringNullableFilter
  emailVerified: DateTimeNullableFilter
  id: StringFilter
  image: StringNullableFilter
  name: StringNullableFilter
  sessions: SessionListRelationFilter
  todoLists: TodoListListRelationFilter
}
